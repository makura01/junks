
==========
『shiori』
==========

[構成]
  language   -> Ruby
  frame-work -> RoR
  web server -> nginx(これそもそもできるのか)
  db server  -> mySQL or sqlite3

[世界観]
 1. コミュニーケーションをあえて重視しない。
 2. とにかくsimpleな作品を作る。
 3. 読書感想文(小学校の宿題のように)を投稿する。
 -> 読書感想文っていい世界観だよね。
 4. UI/UXの勝負になったら確実に負ける。他のところで差別化しましょう。


[外部要件]
1. ユーザ管理
2. 書籍管理
3. amazon apiから情報を得る => 多分そういうAPIがあったはず
4. twitter, facebookに公開できること
5. 読書感想文の投稿
6. サブカルぽいUI/UX

[内部要件]
1. USER 作成 編集 削除
2. 書籍 登録(how?) 編集 削除
3. amazon API に関して調査、結果に応じて、必要なデータも変わってくる。
4. api規約に従って登録。ソーシャルボタンの設置
5. 読書感想文の投稿...ちょっと考える余地があるかも。
6. サブカルっぽいUI/UXとは何か

[スケジュール]


匿名性を重視
誰かもわからないままシャッフルに読書感想文を書く。
このシャッフルにというところがみそ。
だから一個あたりの文章はさらーっとtwitterにつぶやくのでは
なく、なるべく長文を期待。
