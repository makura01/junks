
やっぱり自分PHP一本でやるほうがいいかも。特に他の言語じゃないといけない理由なんてないし。
PHPマスターになろう。あとLINUXマスターになるためと試験のためのC言語はお勉強する。
PHPちゃんとやってれば多分、将来的に仕事必要になった時もなんとかなるだろう...。多分。。。

[機能追加]
  a. フォロー、フォロワー画面の出力がカオスなため、ユーザ検索のように綺麗に並ぶようにする
  b. お知らせ機能
    自分が関わgigiるコメント、フォローされた、フォローしたという通知を表示する画面を作る
    それを読んだ場合は通知が消えるように既読機能が必要？実装難しそう。
    -> commet, sse, websocketという仕組みを使えば実装できるっぽい

1. followされた場合
2. コメントがついた場合
・件数の表示
・既読判定
# show columns from table名

[DBを用意する必要]
notification.table
id PK
user_id FK - users.id(対象となるuser id)
from_user_id FK - users.id(〇〇さんからとなるuser id)
follow(フラグ) + FK  - follow.id 
comment + FK - post.id 
read(フラグ) 0 -> 1(new) - 0(既読)
created
updated
delete_flag 0 -> 1

[followされた場合]
1. AさんがBさんをフォローする(event)
2. notification.tableのuser_id, from_user_id, followフラグ(0->1), readフラグ(0 ->1) に変更
3. [通知]push ベルマークが点く
4. ベルマークを押す
5. notification ページに飛ぶ
6. userAがnotificationページに飛んだ瞬間、userAの全てのreadフラグが0になる。
7. 「userBにふぉろーされました」 -> 押すとuserBのprofile pageへ飛ぶ 

[コメントされた場合]
1. userBがuserAのpostAにコメントする(event)
2. notification.tableのuser_id = userA, from_user_id = userB, comment = postA, readフラグ(0 -> 1)に変更
3. [通知]push ベルマークが点く
4. ベルマークを押す
5. notification pageに飛ぶ
6. userAがnotificationページに飛んだ瞬間、userAの全てのreadフラグが0になる。
7. 「userBからコメントです」がリスト表示 -> コメントがついたpostに飛ぶ
 
notificatin pageに飛んだということをどうやって実装すればいいのか


  c. 新しい投稿が来た際に上からnewみたいなボタンが出現して投稿を確認できる(ajax+cron?で実装する)
  d. デバッグレベルを0にする->周知するまでは2でいいかなー。
  e. セキュリティーをしっかりする(買ってきた本を順番に見ていって確認)
  f. 定期的にいらないファイルを削除する
    どこにあるのか。
  g. テスト自動化(PHPUnitで速攻作るしかない)
  h. 要件の見直し(精神疾患用にする)
  i. 精神疾患に関するニュースを拾ってくる(いらないかも。少なくともβ版では)
  j. タグ機能(病名をタグにする、選択式か自分で書くか)
  k. レイアウトの見直し

  --β版で安定稼働することが確認できたらとうとう本番リリース--
  l. リーフレットを作る(営業用)
  m. 名刺を作る(営業用)
  -----------------------------------------------------------

pixivのapiないかな(なんとなく)

リーフレット作って、営業で病院をまわって名刺も作ろう。
そして補充とかしていこう。バーコードとかで読み取れるように。
そうなると完全にビジネスだな。
ちゃんと広告とかgoogle analysticとかも入れないとだめだな。

bとcは難易度高そうだからできるかな...。
とりあえず、いけそうなやつからやるね。
その前にcakeとphpちょっとやり直さないとだめだなあ。
さすがに全然覚えていない。
テスト自動化はなるはやでやるべきか...?
PHPUnitを使えば簡単に行けるのか...?

何か一つ特徴を。。
精神疾患がある人のコミュニティーサイトとして使用したらだめかな。
それで作ったらセレネに報告するとかでちょっとユーザ確保。
うーんこれいいかもしれない。そうしよう。そうなるとわりと全体設計も見直さなきゃいけないな。
病気名のタグとか作るといいかも。うわー楽しそう。そうしようそうしよう。
